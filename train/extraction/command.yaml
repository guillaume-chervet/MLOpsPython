$schema: https://azuremlschemas.azureedge.net/latest/commandComponent.schema.json
type: command

name: extraction
display_name: Extraction
description: Extract images from pdfs
version: 0.0.1
is_deterministic: true

inputs:
  pdfs_input:
    type: uri_folder

outputs:
  images_output:
    type: uri_folder
  hash_output:
    type: uri_folder

environment:
  name: extraction_environment
  build:
    path: ./

additional_includes:
   - "../../packages"


code: ./

command: |
  set -euo pipefail

  # 1) Outils d'install
  python -m pip install --upgrade pip uv
  uv venv

  # 2) Recréer une copie du projet dans ./train/step SANS le dossier packages/
  mkdir -p train/step
  # Copie tous les éléments top-level sauf 'packages' et 'train' (pour éviter la récursion)
  find . -mindepth 1 -maxdepth 1 \
      ! -name packages \
      ! -name train \
      -exec cp -a {} ./train/step/ \;

  # 3) Se placer dans la copie; ../../packages -> ./packages
  cd train/step

  # 4) Installer les dépendances
  #    Choisis l’une des deux lignes:
  UV_HTTP_TIMEOUT=300 uv sync --no-editable         # deps + projet en non-editable
  # UV_HTTP_TIMEOUT=300 uv sync --no-install        # seulement les deps (équiv. poetry --no-root)

  # 5) Lancer le script via le venv géré par uv (pas besoin de "source")
  uv run python python command.py --pdfs_input ${{inputs.pdfs_input}} --images_output ${{outputs.images_output}} --hash_output ${{outputs.hash_output}}