name: Python Continuous Integration
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.1"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user pipenv
    - name: Format with Black
      run: |
        pipenv install --dev
        pipenv run black train
        pipenv run black train --check
    - name: Lint with flake8
      run: |
        pipenv install --dev
        pipenv run flake8 .
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.1"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user pipenv
    - name: Build packages extraction
      run: |
         chmod +x ./bin/build_package.sh
         ./bin/build_package.sh packages/extraction train/extraction mlopspython_extraction mlopspython-extraction __token__ ${{ secrets.PYPI_API_TOKEN }}
    - name: Run unit tests Extraction
      working-directory: train/extraction
      run: |
        pipenv install --dev
        pipenv run coverage run -m unittest tests.extraction_test
        pipenv run coverage report
    - name: Run unit tests Label Split Data
      working-directory: train/label_split_data
      run: |
        pipenv install --dev
        pipenv run coverage run -m unittest tests.label_split_data_test
        pipenv run coverage report
    - name: Run unit tests Train
      working-directory: train/train
      run: |
        pipenv install --dev
        pipenv run python -m unittest tests.train_test
    - name: Build package inference
      run: |
        chmod +x ./bin/build_package.sh
        ./bin/build_package.sh packages/inference train/evaluate mlopspython_inference mlopspython-inference __token__ ${{ secrets.PYPI_API_TOKEN }}
    - name: Run unit tests Evaluate
      working-directory: train/evaluate
      run: |
        pipenv install --dev
        pipenv run python -m unittest tests.evaluate_test
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZUREML_CREDENTIALS}}
    - name: run train/azure/run_pipeline.py.py
      run: |
          pipenv install
          pipenv run python azureml_run_test.py > train_output.txt
          cat train_output.txt
      working-directory: train
    - name: download model
      run: |
          az extension add -n ml
          MODEL_VERSION = $(python bin/retrieve_output.py model_version)
          az ml model download --name cats-dogs-others --version $MODEL_VERSION --resource-group azure-ml --workspace-name cats-dogs
