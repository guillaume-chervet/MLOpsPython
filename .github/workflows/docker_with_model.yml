name: Reusable Docker With Model Build

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      image_version:
        required: true
        type: string
      image_build_args:
        required: true
        type: string
      image_context:
        required: true
        type: string
      image_file:
        required: true
        type: string
      model_version:
        required: true
        type: string
      resource_group:
        required: true
        type: string
      workspace_name:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      AZURE_CREDENTIALS:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    environment: MLOpsPython
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.13"

    - name: Setup Project
      run: |
        pip install --user poetry
        chmod +x ./Makefile
        ./Makefile

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: download model
      run: |
        cd production/api/core
        echo "VERSION = '${{ inputs.image_version }}'" > version.py

    - name: download model
      run: |
        az extension add -n ml
        MODEL_VERSION=${{ inputs.model_version }}
        RESOURCE_GROUP=${{ inputs.resource_group }}
        WORKSPACE_NAME=${{ inputs.workspace_name }}
        cd production/api/core/model
        az ml model download --name cats-dogs-others --version $MODEL_VERSION --resource-group $RESOURCE_GROUP --workspace-name $WORKSPACE_NAME
        # find files recursively and copy them to the current directory root
        find ./ -name '*.keras' -exec cp "{}" ./  \;
        ls 
        rm -r ./cats-dogs-others
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v2
      with:
        images: ${{ inputs.image_name }}

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.image_context }}
        file : ${{ inputs.image_file }}
        build-args: ${{ inputs.image_build_args }}
        push: true
        tags: ${{ inputs.image_name }}:latest,${{ inputs.image_name }}:${{ inputs.image_version }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Docker image
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.image_context }}
        file : ${{ inputs.image_file }}
        build-args: ${{ inputs.image_build_args }}
        push: true
        tags: ${{ inputs.image_name }}:${{ inputs.image_version }}
        labels: ${{ steps.meta.outputs.labels }}

